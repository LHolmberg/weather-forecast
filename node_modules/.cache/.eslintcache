[{"/Users/lholmberg/Desktop/weather-forecast/src/index.js":"1","/Users/lholmberg/Desktop/weather-forecast/src/reportWebVitals.js":"2","/Users/lholmberg/Desktop/weather-forecast/src/WeatherInfo.js":"3","/Users/lholmberg/Desktop/weather-forecast/src/helper/Helper.js":"4","/Users/lholmberg/Desktop/weather-forecast/src/Home.js":"5"},{"size":726,"mtime":1644345880485,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1644264573807,"results":"8","hashOfConfig":"7"},{"size":3992,"mtime":1644347349495,"results":"9","hashOfConfig":"7"},{"size":349,"mtime":1644346041311,"results":"10","hashOfConfig":"7"},{"size":619,"mtime":1644346143044,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1qe56qr",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"15"},"/Users/lholmberg/Desktop/weather-forecast/src/index.js",[],[],["32","33"],"/Users/lholmberg/Desktop/weather-forecast/src/reportWebVitals.js",[],[],["34","35"],"/Users/lholmberg/Desktop/weather-forecast/src/WeatherInfo.js",["36","37"],[],"import React from \"react\";\nimport './styles/WeatherInfo.scss'\nimport {\n    useNavigate,\n    useLocation\n} from \"react-router-dom\";\nimport {\n    toCelsius,\n    day\n} from './helper/Helper';\n\n\nclass WeatherHelper extends React.Component {\n\n    constructor(props) {\n        super(props);\n   \n        this.state = {\n            items: [],\n            DataisLoaded: false\n        };\n    }\n\n    componentDidMount() {\n        fetch(\n            \"http://api.openweathermap.org/geo/1.0/direct?q=\"+this.props.city.replace(/ /g, '_') +\"&limit=5&appid=ebd7ba44716d363e4cf939b5c8a73e46\")\n            .then((geoRes) => geoRes.json())\n            .then((geoJson) => {\n                fetch(\n                    \"https://weather-react-api.vercel.app/forecast/coords/\" + geoJson[0][\"lat\"] + \",\" + geoJson[0][\"lon\"])\n                    .then((weatherRes) => weatherRes.json())\n                    .then((weatherJson) => {\n                        this.setState({\n                            items: weatherJson,\n                            DataisLoaded: true\n                        });\n                    })\n            })\n    }\n\n    render() {\n        const { DataisLoaded, items } = this.state;\n\n        if (!DataisLoaded) return <div>\n            <h1 className=\"loading\"> Loading... </h1> </div> ;\n        \n        return (\n            <div>\n            <div class=\"card\">\n                <h2>{this.props.city.charAt(0).toUpperCase() + this.props.city.slice(1)}</h2>\n                <h3>{this.state.items[\"currently\"][\"summary\"] + \", Feels like \" +\n                 Math.round(toCelsius(this.state.items[\"currently\"][\"apparentTemperature\"])) + \"°\"}<br/>\n                {\"Wind: \" + Math.round(this.state.items[\"currently\"][\"windSpeed\"]) + \"kph\"} <br/>\n                {\"UV Index: \" + this.state.items[\"currently\"][\"uvIndex\"]}<br/> {\"Pressure: \" +\n                 this.state.items[\"currently\"][\"pressure\"] +  \"hPa\"}</h3>\n                <br/><br/><br/><br/><br/>\n                <h1>{Math.round(toCelsius(this.state.items[\"currently\"][\"temperature\"])) + \"°\"}</h1>\n                \n                <table>\n                    <tr>\n                        <td>{day(1)}</td>\n                        <td>{day(2)}</td>\n                        <td>{day(3)}</td>\n                        <td>{day(4)}</td>\n                        <td>{day(5)}</td>\n                    </tr>\n                    {/* high */}\n                    <tr>\n                        <td>{Math.round(toCelsius(this.state.items[\"daily\"][\"data\"][1][\"temperatureHigh\"])) + \"°\"}</td>\n                        <td>{Math.round(toCelsius(this.state.items[\"daily\"][\"data\"][2][\"temperatureHigh\"])) + \"°\"}</td>\n                        <td>{Math.round(toCelsius(this.state.items[\"daily\"][\"data\"][3][\"temperatureHigh\"])) + \"°\"}</td>\n                        <td>{Math.round(toCelsius(this.state.items[\"daily\"][\"data\"][4][\"temperatureHigh\"])) + \"°\"}</td>\n                        <td>{Math.round(toCelsius(this.state.items[\"daily\"][\"data\"][5][\"temperatureHigh\"])) + \"°\"}</td>\n                    </tr>\n                    {/* low */}\n                    <tr>\n                        <td>{Math.round(toCelsius(this.state.items[\"daily\"][\"data\"][1][\"temperatureLow\"])) + \"°\"}</td>\n                        <td>{Math.round(toCelsius(this.state.items[\"daily\"][\"data\"][2][\"temperatureLow\"])) + \"°\"}</td>\n                        <td>{Math.round(toCelsius(this.state.items[\"daily\"][\"data\"][3][\"temperatureLow\"])) + \"°\"}</td>\n                        <td>{Math.round(toCelsius(this.state.items[\"daily\"][\"data\"][4][\"temperatureLow\"])) + \"°\"}</td>\n                        <td>{Math.round(toCelsius(this.state.items[\"daily\"][\"data\"][5][\"temperatureLow\"])) + \"°\"}</td>\n                    </tr>\n                </table>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default function WeatherInfo() {\n    var location = useLocation();\n    return (\n        <body>\n            <WeatherHelper city={location.state.city}/>\n        </body>\n    );\n}\n","/Users/lholmberg/Desktop/weather-forecast/src/helper/Helper.js",["38"],[],"export const toCelsius = (F) => {\n    return (F-32)/1.8000\n}\n\nexport const day = (n) => {\n    const today = new Date()\n    const next = new Date(today)\n    next.setDate(next.getDate() + n)\n    var days = ['Jan', 'Feb', 'Mar','Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', , 'Oct', 'Nov', 'Dec'];\n    return days[next.getMonth()] + \" \" + next.getDate();\n}","/Users/lholmberg/Desktop/weather-forecast/src/Home.js",["39"],[],"import logo from './logo.svg';\nimport './styles/App.scss';\nimport {\n  useNavigate\n} from \"react-router-dom\";\n\nfunction Home() {\n  var navigate = useNavigate();\n  var val = \"\";\n  return (\n    <body>\n      <form class=\"search-form\">\n      <input onChange={(evt) => { val = evt.target.value }} type=\"search\" placeholder=\"Enter a city...\" class=\"search-input\"/>\n      <button onClick={() => {\n        if(val !== \"\") {\n          navigate(\"/s\",{ state: { city: val} });\n        } else {\n          alert(\"Enter a city\");\n        }\n      }} class=\"search-button\"></button>\n      </form>\n    </body>\n  );\n}\n\nexport default Home;",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"40","replacedBy":"44"},{"ruleId":"42","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":4,"column":5,"nodeType":"48","messageId":"49","endLine":4,"endColumn":16},{"ruleId":"46","severity":1,"message":"50","line":42,"column":31,"nodeType":"48","messageId":"49","endLine":42,"endColumn":36},{"ruleId":"51","severity":1,"message":"52","line":9,"column":16,"nodeType":"53","messageId":"54","endLine":9,"endColumn":101},{"ruleId":"46","severity":1,"message":"55","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'items' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","'logo' is defined but never used.","no-global-assign","no-unsafe-negation"]