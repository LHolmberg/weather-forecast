{"ast":null,"code":"var _jsxFileName = \"/Users/lholmberg/Desktop/weather-forecast/src/WeatherInfo.js\",\n    _s = $RefreshSig$();\n\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WeatherInfo() {\n  _s();\n\n  const location = useLocation();\n  var history = useNavigate();\n  fetch('https://goweather.herokuapp.com/weather/stockholm').then(_ref => {\n    let {\n      results\n    } = _ref;\n    return this.setState({\n      person: results\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: location.state.color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WeatherInfo, \"KnlyO/t0MfS4xfP/qU/XV55NjbM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = WeatherInfo;\nexport default WeatherInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInfo\");","map":{"version":3,"sources":["/Users/lholmberg/Desktop/weather-forecast/src/WeatherInfo.js"],"names":["useNavigate","useLocation","WeatherInfo","location","history","fetch","then","results","setState","person","state","color"],"mappings":";;;AAAA,SACEA,WADF,EAEEC,WAFF,QAGO,kBAHP;;;AAKA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,MAAIG,OAAO,GAAGJ,WAAW,EAAzB;AACAK,EAAAA,KAAK,CAAC,mDAAD,CAAL,CACKC,IADL,CACU;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,WAAiB,KAAKC,QAAL,CAAc;AAAEC,MAAAA,MAAM,EAAEF;AAAV,KAAd,CAAjB;AAAA,GADV;AAEA,sBACI;AAAA,2BACI;AAAA,gBAAKJ,QAAQ,CAACO,KAAT,CAAeC;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAVQT,W;UACYD,W,EACHD,W;;;KAFTE,W;AAYT,eAAeA,WAAf","sourcesContent":["import {\n  useNavigate,\n  useLocation\n} from \"react-router-dom\";\n    \nfunction WeatherInfo() {\n    const location = useLocation();    \n    var history = useNavigate();\n    fetch('https://goweather.herokuapp.com/weather/stockholm')\n        .then(({ results }) => this.setState({ person: results }));\n    return (\n        <body>  \n            <h1>{location.state.color}</h1>\n        </body>\n  );\n}\n\nexport default WeatherInfo;\n"]},"metadata":{},"sourceType":"module"}