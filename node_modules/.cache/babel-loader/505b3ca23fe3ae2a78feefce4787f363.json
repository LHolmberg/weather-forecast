{"ast":null,"code":"var _jsxFileName = \"/Users/lholmberg/Desktop/weather-forecast/src/WeatherInfo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      DataisLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://goweather.herokuapp.com/weather/\" + this.props.city).then(res => res.json()).then(json => {\n      this.setState({\n        items: json,\n        DataisLoaded: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      DataisLoaded,\n      items\n    } = this.state;\n    if (!DataisLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Loading \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 35\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: items[\"temperature\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction WeatherInfo() {\n  _s();\n\n  var location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(App, {\n      city: \"rome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this);\n}\n\n_s(WeatherInfo, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = WeatherInfo;\nexport default WeatherInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInfo\");","map":{"version":3,"sources":["/Users/lholmberg/Desktop/weather-forecast/src/WeatherInfo.js"],"names":["React","useNavigate","useLocation","App","Component","constructor","props","state","items","DataisLoaded","componentDidMount","fetch","city","then","res","json","setState","render","WeatherInfo","location"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,WAFF,QAGO,kBAHP;;;AAMA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CACD,6CAA6C,KAAKL,KAAL,CAAWM,IADvD,CAAL,CAEKC,IAFL,CAEWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFnB,EAGKF,IAHL,CAGWE,IAAD,IAAU;AACZ,WAAKC,QAAL,CAAc;AACVR,QAAAA,KAAK,EAAEO,IADG;AAEVN,QAAAA,YAAY,EAAE;AAFJ,OAAd;AAIH,KARL;AASH;;AACDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAER,MAAAA,YAAF;AAAgBD,MAAAA;AAAhB,QAA0B,KAAKD,KAArC;AACA,QAAI,CAACE,YAAL,EAAmB,oBAAO;AAAA,8BACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADsB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAGnB,wBACA;AAAA,gBAAKD,KAAK,CAAC,aAAD;AAAV;AAAA;AAAA;AAAA;AAAA,YADA;AAGP;;AA9BiC;;AAgClC,SAASU,WAAT,GAAuB;AAAA;;AACf,MAAIC,QAAQ,GAAGjB,WAAW,EAA1B;AAEA,sBACI;AAAA,2BACA,QAAC,GAAD;AAAK,MAAA,IAAI,EAAE;AAAX;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKP;;GARQgB,W;UACchB,W;;;KADdgB,W;AAUT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport {\n  useNavigate,\n  useLocation\n} from \"react-router-dom\";\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n   \n        this.state = {\n            items: [],\n            DataisLoaded: false\n        };\n    }\n\n    componentDidMount() {\n        fetch(\n            \"https://goweather.herokuapp.com/weather/\" + this.props.city)\n            .then((res) => res.json())\n            .then((json) => {\n                this.setState({\n                    items: json,\n                    DataisLoaded: true\n                });\n            })\n    }\n    render() {\n        const { DataisLoaded, items } = this.state;\n        if (!DataisLoaded) return <div>\n            <h1> Loading </h1> </div> ;\n   \n        return (\n        <h1>{items[\"temperature\"]}</h1>\n    );\n}\n}\nfunction WeatherInfo() {\n        var location = useLocation();\n        \n        return (\n            <body>\n            <App city={\"rome\"}/>\n            </body>\n        );\n}\n\nexport default WeatherInfo;\n"]},"metadata":{},"sourceType":"module"}